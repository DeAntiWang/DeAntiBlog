---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import BaseHead from '../components/BaseHead.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { SITE_TITLE } from '../consts';

import type { CollectionEntry } from 'astro:content';

type Props = CollectionEntry<'blog'>['data'] & { nav: { title: string; num: number; }[] };

const { title, description, pubDate, updatedDate, heroImage, tag, nav } = Astro.props;
const minNav = nav.reduce((res, now) => res > now.num ? now.num : res, 10);
const maxNav = nav.reduce((res, now) => res < now.num ? now.num : res, 0);
---

<html lang="en">
	<head>
		<BaseHead title={`${title}-${SITE_TITLE}`} description={description} />
	</head>
	<body>
		<Header />
		<main>
			<article>
				<section class="article-head">
					<section class="article-info">
						<FormattedDate date={pubDate} updatedDate={updatedDate} />
						<h1 class="title">{title}</h1>
					</section>
					{heroImage && <div class="hero-image" style={`background-image: url(${heroImage})`}></div>}
				</section>
				<hr>
				<slot />
			</article>
			<nav>
				{
					nav.map(item => (
						<li data-priority={item.num - minNav + 1}><a href={`#${item.title}`}>{item.title}</a></li>
					))
				}
			</nav>
		</main>
		<Footer />
	</body>
</html>

<style lang="less">
  @import '../styles/sizing.less';
	main {
		display: flex;
		flex-direction: row;
		align-items: flex-start;
		justify-content: center;
		width: 100%;
		padding: 20px 20px 0;
    margin: 0 auto;
    max-width: var(--SITE-WIDTH-LARGE);
    @media @mobile { max-width: var(--SITE-WIDTH-SMALL); }
    @media @tablet { max-width: var(--SITE-WIDTH-BASE); }
    @media @desktop { max-width: var(--SITE-WIDTH-MEDIUM); }
    @media @largeDesktop { max-width: var(--SITE-WIDTH-LARGE); }
  }
	article {
		flex: 1;
		width: 100%;
		max-width: var(--SITE-WIDTH-BASE);
		line-height: var(--LINEHEIGHT-CONTENT);
		// .article-info {
		// 	position: sticky;
		// 	top: 80px;
		// 	background-color: var(--BG-0);
		// }
	}
	nav {
		position: sticky;
		top: 80px;
		flex-shrink: 0;
		width: 260px;
		padding: 0 20px;
		margin-left: 40px;
		[data-priority="1"] { --priority: 1; }
		[data-priority="2"] { --priority: 2; }
		[data-priority="3"] { --priority: 3; }
		[data-priority="4"] { --priority: 4; }
		[data-priority="5"] { --priority: 5; }
		[data-priority="6"] { --priority: 6; }
		li {
			display: flex;
			flex-direction: row;
			align-items: center;
			list-style: none;
			font-size: var(--FONT-SM);
			color: var(--FG-3);
			transition: color .15s ease-in-out;
			padding-left: calc(4px * (var(--priority) - 1));
			a {
				flex-shrink: 1;
				color: inherit;
				white-space: nowrap;
				text-overflow: ellipsis;
				overflow: hidden;
			}
			&:hover { color: var(--FG-0); }
			&:before {
				flex-grow: 0;
				flex-shrink: 0;
				display: inline-block;
				content: '';
				margin-right: 6px;
				height: 2px;
				border-radius: var(--RADIUS-ROUND);
				background-color: var(--FG-3);
				width: calc(4px * (7 - var(--priority)));
				// width: 4px;
			}
			&[data-priority="1"] { margin-top: 6px; }
		}
		@media @mobile { display: none; }
    @media @tablet { width: 210px; }
    @media @desktop { width: 240px; }
    @media @largeDesktop { width: 260px; }
	}
	.title {
		font-size: 2em;
		margin: 0 0 0.5em 0;
	}
	.article-head {
		display: flex;
		flex-direction: column;
	}
	.hero-image {
		width: 100%;
		padding-bottom: calc(100% / 2.35);
		overflow: hidden;
		border-radius: var(--RADIUS-SMALL);
		background-size: cover;
		background-position: center;
		background-repeat: no-repeat;
	}
	hr {
		border-top: 1px solid #ddd;
		margin: 1rem 0;
	}
</style>
